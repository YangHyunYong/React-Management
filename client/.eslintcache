[{"D:\\management\\client\\src\\index.js":"1","D:\\management\\client\\src\\App.js":"2","D:\\management\\client\\src\\reportWebVitals.js":"3","D:\\management\\client\\src\\components\\customer.js":"4","D:\\management\\client\\src\\components\\CustomerAdd.js":"5"},{"size":500,"mtime":1607247639882,"results":"6","hashOfConfig":"7"},{"size":3288,"mtime":1607249294147,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1606851590772,"results":"9","hashOfConfig":"7"},{"size":704,"mtime":1606984303745,"results":"10","hashOfConfig":"7"},{"size":2860,"mtime":1607249298860,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"x518hm",{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"D:\\management\\client\\src\\index.js",[],["25","26"],"D:\\management\\client\\src\\App.js",["27"],"import React, { Component } from 'react'\nimport logo from \"./logo.svg\";\nimport CustomerAdd from './components/CustomerAdd';\nimport \"./App.css\";\nimport Customer from \"./components/customer\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\"; //컴포넌트 외부를 감싸는 컴포넌트\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst styles = (theme) => ({\n  root: {\n    width: \"100%\",\n    marginTop: theme.spacing.unit * 3,\n    overflowX: \"auto\",\n  },\n  table: {\n    minWidth: 1080,\n  },\n  progress: {\n    margin: theme.spacing.unit * 2\n  }\n});\n\n/*\n1. constructor()\n2. componentWillMount()\n3. render()\n4. componentDidMount()\n\nprops or state => shouldComponentUpdate() - 다시 render()를 호출, 재구성\n\n*/\n\nclass App extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      customers: '',\n      completed: 0\n    }\n  }\n\n  stateRefresh = () =>{\n    this.setState({\n      customers: '',\n      completed: 0\n    });\n    this.callApi()\n    .then(res => this.setState({customers: res}))\n    .catch(err=>console.log(err));\n  }\n  //데이터 받아오는 작업 수행\n  componentDidMount(){\n    this.timer = setInterval(this.progress,20);\n    this.callApi()\n    .then(res => this.setState({customers: res}))\n    .catch(err=>console.log(err));\n  }\n  //비동기적으로 불러옴\n  callApi = async () =>{\n    const response = await fetch('/api/customers');\n    const body = await response.json();\n    return body;\n  }\n\n  progress = () => {\n    const{completed} = this.state;\n    this.setState({completed: completed >= 100 ? 0 : completed + 1});\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <div>\n      <Paper className={classes.root}>\n        <Table className={classes.table}>\n          <TableHead>\n            <TableRow>\n              <TableCell>번호</TableCell>\n              <TableCell>이미지</TableCell>\n              <TableCell>이름</TableCell>\n              <TableCell>생년월일</TableCell>\n              <TableCell>성별</TableCell>\n              <TableCell>직업</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {this.state.customers ? this.state.customers.map((c) => {\n              return (\n                <Customer \n                  key={c.id}\n                  id={c.id}\n                  image={c.image}\n                  name={c.name}\n                  birthday={c.birthday}\n                  gender={c.gender}\n                  job={c.job}\n                />\n              );\n            }) : \n            <TableRow>\n              <TableCell colspan='6' align='center'>\n                <CircularProgress className={classes.progress} variant='determinate' value={this.state.completed}/>\n              </TableCell>\n            </TableRow>\n            }\n          </TableBody>\n        </Table>\n      </Paper>\n      <CustomerAdd stateRefresh={this.stateRefresh}/>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(App);\n","D:\\management\\client\\src\\reportWebVitals.js",[],"D:\\management\\client\\src\\components\\customer.js",[],["28","29"],"D:\\management\\client\\src\\components\\CustomerAdd.js",[],{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","severity":1,"message":"35","line":2,"column":8,"nodeType":"36","messageId":"37","endLine":2,"endColumn":12},{"ruleId":"30","replacedBy":"38"},{"ruleId":"32","replacedBy":"39"},"no-native-reassign",["40"],"no-negated-in-lhs",["41"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar",["40"],["41"],"no-global-assign","no-unsafe-negation"]